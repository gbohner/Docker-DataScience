ARG FROM_STAGE=stage5
# Recreate users from host machine to docker container
FROM safehaven_ds:${FROM_STAGE}


# ----------------------------------------------------------
# Add list of safe haven users to container authentications
# ----------------------------------------------------------

USER root

# Add autentication from host (via volume mapped /etc and using project number)
# Also add "root" on docker to "sudo" group, so it can invoke PAM authentication
COPY ./custom_scripts/update_auth /usr/local/bin/update_auth
RUN chmod +x /usr/local/bin/update_auth && \
    usermod -a -G sudo root

# Add the list of users to be authenticated
COPY ./users.* /src/

RUN chmod +r /src/users.list && \
    chmod +r /src/users.group.name

# Ensure we modify the default umask via /etc/profile, so groups can overwrite the appropriate folders
COPY ./custom_scripts/set_global_umask /src/set_global_umask
RUN chmod +r /src/set_global_umask && \
    cat /src/set_global_umask >> /etc/profile

# Make sure that before /init we run the update_auth user authentication script
ADD ./custom_scripts/custom_init /custom_init
RUN chmod +x /custom_init

# Move this to other place (earlier, to jupyterhub settings), atm just here for testing
# ADD ./custom_scripts/run_jupyterhub_service /etc/services.d/jupyterhub/run	
# ADD ./custom_scripts/jupyterhub_config.py /etc/jupyter/jupyterhub_config.py

ENV NB_UMASK=0o002

# Move this to other place (earlier, to jupyterhub settings)
# Modify user umask in jupyter_notebook_config.py
# RUN echo -e "\n\n\n" >> /etc/jupyter/jupyter_notebook_config.py && \
#     echo "import os" >> /etc/jupyter/jupyter_notebook_config.py && \
#     echo -e "\n\n" >> /etc/jupyter/jupyter_notebook_config.py && \
#     echo "os.umask(0o002)" >> /etc/jupyter/jupyter_notebook_config.py
