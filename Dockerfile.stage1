# Base Debian image installs RStudio server with correct version
FROM rocker/tidyverse:3.5.1
# rocker/verse installs weird tex distribution incompatible with jupyter docker-stack
# so we just use tidyverse instead

LABEL maintainer="Gergo Bohner <gergo.bohner@warwick.ac.uk>"

# -----------------------------------
# Create home directory and fix user permissions
# -----------------------------------

# Copied from https://github.com/jupyter/docker-stacks/blob/master/base-notebook/Dockerfile

# Gergo - Change user name from jovyan to rstudio due to different base image

ARG NB_USER="rstudio"
ARG NB_UID="1000"

# Gergo - Change $NB_GID to the one from local file, this can be done via the
# the first docker build command, using 
# "--build_arg NB_GID=$(cat users.group.gid) --build_arg NB_GNAME=$(cat users.group.name)"
# See implemented in "docker_build_all.sh" 
ARG NB_GID
ARG NB_GNAME
#ARG NB_GID="100"
#ARG NB_GNAME="users"


# Install all OS dependencies for notebook server that starts but lacks all
# features (e.g., download as all possible file formats)
# Gergo - add "acl" for file access setup
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get -yq dist-upgrade \
 && apt-get install -yq --no-install-recommends \
    wget \
    bzip2 \
    ca-certificates \
    sudo \
    locales \
    fonts-liberation \
    acl \
 && rm -rf /var/lib/apt/lists/*

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen

# Standard debian command line tools tools (except remove apt-listchanges, that gives an error for some reason)
RUN apt-get update && \
    apt-get install -yq --no-install-recommends tasksel && \
    apt-get install -yq --no-install-recommends $(tasksel --task-packages standard | grep -v apt-listchanges) && \
    rm -rf /var/lib/apt/lists/*


# Configure environment for python conda
ENV CONDA_DIR=/opt/conda \
    SHELL=/bin/bash \
    NB_USER=$NB_USER \
    NB_UID=$NB_UID \
    NB_GID=$NB_GID \
    NB_GNAME=$NB_GNAME \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8
ENV PATH=$CONDA_DIR/bin:$PATH \
    HOME=/home/$NB_USER


# Gergo - modified to copy from correct subfolder
# Add a script that we will use to correct permissions after running certain commands
ADD ./docker-stacks/base-notebook/fix-permissions /usr/local/bin/fix-permissions

# Enable prompt color in the skeleton .bashrc before creating the default NB_USER
RUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc


# Create NB_USER wtih name jovyan user with UID=1000 and in the 'users' group
# and make sure these dirs are writable by the `users` group.
# Gergo -  Above is wrong! The rocker/rstudio image already created the rstudio user with UID=1000 and users group, we'll use that as base instead of creating a new one called jovyan
# Gergo - To ensure mounted directory access rights are correct, we'll create the group same as we have on host!
# Add the group to NB_USER and set it to primary group
RUN groupadd -g $NB_GID $NB_GNAME && \
    usermod -a -G $NB_GNAME $NB_USER && \
    usermod -g $NB_GNAME $NB_USER && \
    echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su && \
    mkdir -p $CONDA_DIR && \
    chown $NB_USER:$NB_GID $CONDA_DIR && \
    chmod g+w /etc/passwd

USER root

RUN fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

USER $NB_UID

# Setup work directory for backward-compatibility
RUN mkdir /home/$NB_USER/work

USER root
RUN fix-permissions /home/$NB_USER


# -----------------------------------
# Add further R tools and install default packages
# -----------------------------------


# Gergo copied and adapted (R should NOT be managed by conda!) from https://github.com/jupyter/docker-stacks/blob/master/datascience-notebook/Dockerfile

USER root

# R pre-requisites
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    fonts-dejavu \
    tzdata \
    gfortran \
    gcc && \
    rm -rf /var/lib/apt/lists/*

USER root 

# Gergo - edited this a lot (use R separately, not via conda)
# R packages including IRKernel which gets installed globally.
# We can use the "install2.r" command that comes with rocker/rstudio image
# Ensure we install packages only once

# devtools requires git2r which requires debian package zlib1g-dev
# sparklyr requires xml2 which requires debian package libxml2-dev
RUN apt-get update && apt-get install -yq --no-install-recommends \
	zlib1g-dev \
	libxml2-dev
RUN install2.r --libloc /usr/local/lib/R/site-library --error \
	IRkernel \
	shiny \
	Rcpp \
	shiny \
	sparklyr \
	RSQLite \
	htmltools \
	htmlwidgets \
	RCurl \
	crayon \
	fst \
	reshape2 \
	plyr  

# Fix permissions via root user (did not work in "stage2", fix that later there)
RUN fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER && \
    fix-permissions /usr/local/lib/R/site-library

# -------------------------------
# Custom further install scripts
# -------------------------------

# COPY ./install_scripts_custom /src/install_scripts_custom
# RUN chmod +x /src/install_scripts_custom/*

# Start configured services via s6-overlay
# CMD /init


# Switch back to jovyan to avoid accidental container runs as root
USER $NB_UID

