# Add docker-stacks/base-notebook setup
FROM safehaven_ds:stage1


# -----------------------------------
# Add python and basic jupyterhub
# -----------------------------------

# Install conda as rstudio and check the md5 sum provided on the download site
ENV MINICONDA_VERSION=4.5.12 \
    CONDA_VERSION=4.6.7

RUN cd /tmp && \
    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "866ae9dff53ad0874e1d1a60b1ad1ef8 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - && \
    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    $CONDA_DIR/bin/conda config --system --prepend channels conda-forge && \
    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \
    $CONDA_DIR/bin/conda config --system --set show_channel_urls true && \
    $CONDA_DIR/bin/conda install --quiet --yes conda="${CONDA_VERSION%.*}.*" && \
    $CONDA_DIR/bin/conda update --all --quiet --yes && \
    conda clean -tipsy && \
    rm -rf /home/$NB_USER/.cache/yarn

USER root

RUN fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

USER $NB_UID

# Install Tini
RUN conda install --quiet --yes 'tini=0.18.0' && \
    conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned && \
    conda clean -tipsy

USER root

RUN fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

USER $NB_UID

# Install Jupyter Notebook, Lab, and Hub
# Generate a notebook server config
# Cleanup temporary files
# Correct permissions
# Do all this in a single RUN command to avoid duplicating all of the
# files across image layers when the permissions change
RUN conda install --quiet --yes \
    'notebook=5.7.5' \
    'jupyterhub=0.9.4' \
    'jupyterlab=0.35.4' && \
    conda clean -tipsy && \
    jupyter labextension install @jupyterlab/hub-extension@^0.12.0 && \
    npm cache clean --force && \
    jupyter notebook --generate-config && \
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    rm -rf /home/$NB_USER/.cache/yarn

USER root

RUN fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER


EXPOSE 8888
WORKDIR $HOME

# Configure container startup
ENTRYPOINT ["tini", "-g", "--"]
CMD ["start-notebook.sh"]

# Gergo - modified below to copy from subfolders

# Add local files as late as possible to avoid cache busting
COPY ./docker-stacks/base-notebook/start.sh /usr/local/bin/
COPY ./docker-stacks/base-notebook/start-notebook.sh /usr/local/bin/
COPY ./docker-stacks/base-notebook/start-singleuser.sh /usr/local/bin/
COPY ./docker-stacks/base-notebook/jupyter_notebook_config.py /etc/jupyter/

# Gergo - Add jupyterhub settings
ADD ./custom_scripts/run_jupyterhub_service /etc/services.d/jupyterhub/run
ADD ./custom_scripts/jupyterhub_config.py /etc/jupyter/jupyterhub_config.py

# Modify user umask in jupyter_notebook_config.py
# RUN echo -e "\n\n\n" >> /etc/jupyter/jupyter_notebook_config.py && \
#    echo "import os" >> /etc/jupyter/jupyter_notebook_config.py && \
#    echo -e "\n\n" >> /etc/jupyter/jupyter_notebook_config.py && \
#    echo "os.umask(0o002)" >> /etc/jupyter/jupyter_notebook_config.py

# Make sure that before /init we run the update_auth user authentication script
ADD ./custom_scripts/custom_init /custom_init
RUN chmod +x /custom_init

RUN fix-permissions /etc/jupyter/



