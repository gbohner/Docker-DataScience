# Add julia and IJulia
ARG FROM_STAGE=stage4
FROM safehaven_ds:${FROM_STAGE}

USER root

RUN fix-permissions /home/$NB_USER


# Julia dependencies
# install Julia packages in /opt/julia instead of $HOME
ENV JULIA_DEPOT_PATH=/opt/julia
ENV JULIA_PKGDIR=/opt/julia
ENV JULIA_VERSION=1.1.0

RUN mkdir /opt/julia-${JULIA_VERSION} && \
    cd /tmp && \
    wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz && \
    echo "80cfd013e526b5145ec3254920afd89bb459f1db7a2a3f21849125af20c05471 *julia-${JULIA_VERSION}-linux-x86_64.tar.gz" | sha256sum -c - && \
    tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 && \
    rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
RUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia

# Show Julia where conda libraries are \
RUN mkdir /etc/julia && \
    echo "push!(Libdl.DL_LOAD_PATH, \"$CONDA_DIR/lib\")" >> /etc/julia/juliarc.jl && \
    # Create JULIA_PKGDIR \
    mkdir $JULIA_PKGDIR && \
    chown $NB_USER $JULIA_PKGDIR
    

USER root

RUN fix-permissions $JULIA_PKGDIR


# Fix permissions via root user (did not work in "stage2", fix that later there)
RUN fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER && \
    fix-permissions $JULIA_PKGDIR && \ 
    fix-permissions $CONDA_DIR/share/jupyter && \
    fix-permissions /usr/local/lib/R/site-library

USER $NB_UID


# Gergo - removed HDF5 line, due to giving error (not compiling, seems like known bug with libraries)
# Add Julia packages. Only add HDF5 if this is not a test-only build since
# it takes roughly half the entire build time of all of the images on Travis
# to add this one package and often causes Travis to timeout.
#
# Install IJulia as jovyan and then move the kernelspec out
# to the system share location. Avoids problems with runtime UID change not
# taking effect properly on the .local folder in the jovyan home dir.
RUN julia -e 'import Pkg; Pkg.update()' && \
    julia -e "using Pkg; pkg\"add Gadfly RDatasets IJulia InstantiateFromURL\"; pkg\"precompile\"" && \ 
    # move kernelspec out of home \
    mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/ && \
    chmod -R go+rx $CONDA_DIR/share/jupyter && \
    rm -rf $HOME/.local


USER root

RUN fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER && \
    fix-permissions $JULIA_PKGDIR && \
    fix-permissions $CONDA_DIR/share/jupyter && \
    fix-permissions /usr/local/lib/R/site-library

# Gergo - Edit the global PAM authentication configuration files to include the required environment variable JULIA_DEPOT_PATH
# NOTE: This below doesn't work (so commented out) due to PAM authentication seems to fail in jupyterhub
# RUN echo "JULIA_DEPOT_PATH DEFAULT=/opt/julia OVERRIDE=/opt/julia" >> /etc/security/pam_env.conf

# Alternatively configure jupyter_notebook_config.py to add the environment variable on startup
RUN echo -e "\n\n\n" >> /etc/jupyter/jupyter_notebook_config.py && \
    echo "os.environ['JULIA_DEPOT_PATH'] = '/opt/julia'" >> /etc/jupyter/jupyter_notebook_config.py && \
    echo "os.environ['JULIA_LOAD_PATH'] = '/opt/julia'" >> /etc/jupyter/jupyter_notebook_config.py

# Modify user umask in jupyter_notebook_config.py
# RUN echo -e "\n\n\n" >> /etc/jupyter/jupyter_notebook_config.py && \
#    echo "import os" >> /etc/jupyter/jupyter_notebook_config.py && \
#    echo -e "\n\n" >> /etc/jupyter/jupyter_notebook_config.py && \
#    echo "os.umask(0o002)" >> /etc/jupyter/jupyter_notebook_config.py && \


USER root
# USER $NB_UID

